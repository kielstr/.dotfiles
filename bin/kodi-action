#!/usr/bin/env perl

use 5.18.0;
use warnings;

my $script = $0;
$script =~ s!^.*/!!;

my %commands = (
    clean => {
        msg => 'Clean the Kodi library',
        cmd => 'cleanLibrary(video)',
    },

    play => {
        msg => 'Play a streaming video',
        cmd => 'playMedia(%s)',
        args => [qw( video-url )],
    },

    update => {
        msg => 'Update the Kodi library',
        cmd => 'updateLibrary(video)',
    },
);

main();
exit 0;

sub main {
    usage() unless @ARGV;

    my $command = shift @ARGV;
    my $opts = $commands{$command} or usage("Unknown command \"$command\"");

    my $expected_args = @{ $opts->{args} // [] };
    my $got_args = @ARGV;
    usage("Expected $expected_args args, but got $got_args")
        unless $got_args == $expected_args;

    my $kodi_command = sprintf($opts->{cmd}, @ARGV);
    exec('kodi-send', '--action', $kodi_command);
}

sub usage {
    say @_ if @_;
    say "usage: $script command [args...]";
    for my $command (sort keys %commands) {
        my $opts = $commands{$command};
        my $args = $opts->{args} // [ ];
        my $usage = join(' ', $command, @$args);
        printf("\t%-20s* %s\n", $usage, $opts->{msg});
    }
    exit 1;
}
